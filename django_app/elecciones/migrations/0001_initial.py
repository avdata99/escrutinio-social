# Generated by Django 3.2.25 on 2025-09-11 16:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djgeojson.fields
import model_utils.fields
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgrupacionCircuito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AgrupacionCircuitos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('minimo_mesas', models.PositiveIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Agrupación de Circuitos',
                'verbose_name_plural': 'Agrupaciones de Cicuitos',
            },
        ),
        migrations.CreateModel(
            name='Carga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('invalidada', models.BooleanField(default=False)),
                ('tipo', models.CharField(choices=[('problema', 'problema'), ('parcial', 'parcial'), ('total', 'total'), ('total_oficial', 'total_oficial'), ('parcial_oficial', 'parcial_oficial')], max_length=50)),
                ('origen', models.CharField(choices=[('web', 'web'), ('csv', 'csv'), ('telegram', 'telegram')], default='web', max_length=50)),
                ('firma', models.CharField(blank=True, editable=False, max_length=300, null=True)),
                ('tomada_por_consolidador', models.DateTimeField(blank=True, default=None, null=True)),
                ('procesada', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CargaOficialControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_ultimo_registro', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('nombre', models.CharField(db_index=True, max_length=100)),
                ('color', models.CharField(default='black', help_text='Color para CSS (ej, red o #FF0000)', max_length=10)),
                ('back_color', models.CharField(default='white', help_text='Color para CSS (ej, red o #FF0000)', max_length=10)),
                ('activa', models.BooleanField(db_index=True, default=True, help_text='Si no está activa, no se cargan datos para esta categoría y no se muestran resultados.')),
                ('sensible', models.BooleanField(default=False, help_text='Solo pueden visualizar los resultados de esta cagtegoría con permisos especiales.')),
                ('requiere_cargas_parciales', models.BooleanField(default=False)),
                ('prioridad', models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CategoriaGeneral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('foto_ejemplo', versatileimagefield.fields.VersatileImageField(blank=True, height_field='height', null=True, upload_to='elecciones/categorias', width_field='width')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image Height')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image Width')),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaOpcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField(blank=True, help_text='Orden en el acta', null=True)),
                ('prioritaria', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Asociación Categoría-Opción',
                'verbose_name_plural': 'Asociaciones Categoría-Opción',
                'ordering': ['categoria'],
            },
        ),
        migrations.CreateModel(
            name='Circuito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localidad_cabecera', models.CharField(blank=True, max_length=100, null=True)),
                ('numero', models.CharField(db_index=True, max_length=10)),
                ('nombre', models.CharField(max_length=100)),
                ('electores', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Circuito electoral',
                'verbose_name_plural': 'Circuitos electorales',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionComputo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Configuración para cómputo',
                'verbose_name_plural': 'Configuraciones para cómputo',
                'ordering': ('nombre',),
            },
        ),
        migrations.CreateModel(
            name='Distrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(db_index=True, max_length=10, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('electores', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Distrito electoral',
                'verbose_name_plural': 'Distritos electorales',
            },
        ),
        migrations.CreateModel(
            name='Eleccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Elección',
                'verbose_name_plural': 'Elecciones',
            },
        ),
        migrations.CreateModel(
            name='LugarVotacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=100)),
                ('barrio', models.CharField(blank=True, max_length=100)),
                ('ciudad', models.CharField(blank=True, max_length=100)),
                ('numero', models.CharField(blank=True, help_text='Número de escuela', max_length=10, null=True)),
                ('electores', models.PositiveIntegerField(blank=True, null=True)),
                ('geom', djgeojson.fields.PointField(blank=True, null=True)),
                ('estado_geolocalizacion', models.PositiveIntegerField(default=0, help_text='Indicador (0-10) de que confianza hay en la geolozalización')),
                ('calidad', models.CharField(blank=True, editable=False, help_text='calidad de la geolocalizacion', max_length=20)),
                ('latitud', models.FloatField(editable=False, null=True)),
                ('longitud', models.FloatField(editable=False, null=True)),
                ('circuito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lugares_votacion', to='elecciones.circuito')),
            ],
            options={
                'verbose_name': 'Lugar de votación',
                'verbose_name_plural': 'Lugares de votación',
            },
        ),
        migrations.CreateModel(
            name='Mesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=10)),
                ('es_testigo', models.BooleanField(default=False)),
                ('url', models.URLField(blank=True, help_text='url al telegrama')),
                ('electores', models.PositiveIntegerField(blank=True, null=True)),
                ('extranjeros', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Opcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('positivo', 'positivo'), ('no_positivo', 'no_positivo'), ('metadata', 'metadata'), ('metadata_optativa', 'metadata_optativa')], db_index=True, default='positivo', max_length=100)),
                ('nombre', models.CharField(max_length=100)),
                ('nombre_corto', models.CharField(db_index=True, default='', max_length=20)),
                ('codigo', models.CharField(blank=True, db_index=True, help_text='Código de opción', max_length=30, null=True)),
                ('codigo_dne', models.PositiveIntegerField(blank=True, help_text='Nº asignado en la base de datos de resultados oficiales', null=True)),
            ],
            options={
                'verbose_name': 'Opción',
                'verbose_name_plural': 'Opciones',
                'ordering': ['partido', 'nombre_corto'],
            },
        ),
        migrations.CreateModel(
            name='Partido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(blank=True, null=True)),
                ('codigo', models.CharField(blank=True, db_index=True, help_text='Código de partido', max_length=10, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('nombre_corto', models.CharField(default='', max_length=30)),
                ('color', models.CharField(blank=True, default='', max_length=30)),
                ('referencia', models.CharField(blank=True, default='', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TecnicaProyeccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Técnica de Proyección',
                'verbose_name_plural': 'Técnicas de Proyección',
                'ordering': ('nombre',),
            },
        ),
        migrations.CreateModel(
            name='VotoMesaReportado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votos', models.PositiveIntegerField()),
                ('carga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reportados', to='elecciones.carga')),
                ('opcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elecciones.opcion')),
            ],
        ),
        migrations.CreateModel(
            name='SeccionPolitica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('distrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secciones_politicas', to='elecciones.distrito')),
            ],
            options={
                'verbose_name': 'Sección política',
                'verbose_name_plural': 'Secciones políticas',
                'ordering': ('numero',),
            },
        ),
        migrations.CreateModel(
            name='Seccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(db_index=True, max_length=10, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('electores', models.PositiveIntegerField(default=0)),
                ('prioridad_hasta_2', models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(1)])),
                ('prioridad_2_a_10', models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(1)])),
                ('prioridad_10_a_100', models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(1)])),
                ('cantidad_minima_prioridad_hasta_2', models.PositiveIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(1)])),
                ('distrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secciones', to='elecciones.distrito')),
                ('seccion_politica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secciones', to='elecciones.seccionpolitica')),
            ],
            options={
                'verbose_name': 'Sección electoral',
                'verbose_name_plural': 'Secciones electorales',
                'ordering': ('numero',),
            },
        ),
        migrations.AddField(
            model_name='opcion',
            name='partido',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opciones', to='elecciones.partido'),
        ),
        migrations.CreateModel(
            name='MesaCategoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', model_utils.fields.StatusField(choices=[('parcial_en_conflicto', 'parcial en conflicto'), ('parcial_sin_consolidar', 'parcial sin consolidar'), ('sin_cargar', 'sin cargar'), ('parcial_consolidada_csv', 'parcial consolidada CSV'), ('parcial_consolidada_dc', 'parcial consolidada doble carga'), ('total_sin_consolidar', 'total sin consolidar'), ('total_en_conflicto', 'total en conflicto'), ('total_consolidada_csv', 'total consolidada CSV'), ('total_consolidada_dc', 'total consolidada doble carga'), ('con_problemas', 'con problemas')], default='sin_cargar', max_length=100, no_check_for_status=True)),
                ('percentil', models.PositiveIntegerField(blank=True, null=True)),
                ('orden_de_llegada', models.PositiveIntegerField(blank=True, null=True)),
                ('coeficiente_para_orden_de_carga', models.PositiveIntegerField(blank=True, null=True)),
                ('cant_fiscales_asignados', models.PositiveIntegerField(default=0)),
                ('cant_asignaciones_realizadas', models.PositiveIntegerField(default=0)),
                ('carga_oficial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='es_oficial', to='elecciones.carga')),
                ('carga_testigo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='es_testigo', to='elecciones.carga')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elecciones.categoria')),
                ('mesa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elecciones.mesa')),
                ('parcial_oficial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='es_parcial_oficial', to='elecciones.carga')),
            ],
            options={
                'verbose_name': 'Mesa categoría',
                'verbose_name_plural': 'Mesas Categorías',
            },
        ),
        migrations.AddField(
            model_name='mesa',
            name='categorias',
            field=models.ManyToManyField(through='elecciones.MesaCategoria', to='elecciones.Categoria'),
        ),
        migrations.AddField(
            model_name='mesa',
            name='circuito',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mesas', to='elecciones.circuito'),
        ),
        migrations.AddField(
            model_name='mesa',
            name='lugar_votacion',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mesas', to='elecciones.lugarvotacion', verbose_name='Lugar de votacion'),
        ),
        migrations.CreateModel(
            name='ConfiguracionComputoDistrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agregacion', models.CharField(choices=[('todas_las_cargas', 'Todas'), ('solo_consolidados', 'Consolidadas'), ('solo_consolidados_doble_carga', 'Consolidadas con doble Carga')], max_length=30)),
                ('opciones', models.CharField(choices=[('prioritarias', 'Prioritarias'), ('todas', 'Todas')], max_length=30)),
                ('configuracion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones', to='elecciones.configuracioncomputo')),
                ('distrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elecciones.distrito')),
                ('proyeccion', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elecciones.tecnicaproyeccion')),
            ],
            options={
                'verbose_name': 'Configuración para cómputo por distrito',
                'verbose_name_plural': 'Configuraciones para cómputo por distrito',
            },
        ),
    ]
